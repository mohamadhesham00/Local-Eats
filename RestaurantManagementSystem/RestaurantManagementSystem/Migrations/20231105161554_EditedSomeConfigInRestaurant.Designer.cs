// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RestaurantManagementSystem.Core.RestaurantManagement.Entities;
using RestaurantManagementSystem.Infrastructure.Common.Db;

#nullable disable

namespace RestaurantManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231105161554_EditedSomeConfigInRestaurant")]
    partial class EditedSomeConfigInRestaurant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.Entities.RegistrationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("VerificationCodeExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("RegistrationRequests", (string)null);
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<double?>("AvgRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<List<DeliveryTime>>("DeliveryTime")
                        .HasColumnType("jsonb");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.RestaurantMenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string[]>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantMenuItems");
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.Entities.RegistrationRequest", b =>
                {
                    b.OwnsOne("RestaurantManagementSystem.src.Core.Common.Entities.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("RegistrationRequestId")
                                .HasColumnType("uuid");

                            b1.Property<string>("ContactEmail")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ContactEmail");

                            b1.Property<string>("ContactPhoneNumber")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ContactPhoneNumber");

                            b1.HasKey("RegistrationRequestId");

                            b1.ToTable("RegistrationRequests");

                            b1.WithOwner()
                                .HasForeignKey("RegistrationRequestId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.Restaurant", b =>
                {
                    b.OwnsOne("RestaurantManagementSystem.src.Core.Common.Entities.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<Guid>("RestaurantId")
                                .HasColumnType("uuid");

                            b1.Property<string>("ContactEmail")
                                .HasColumnType("text")
                                .HasColumnName("ContactEmail");

                            b1.Property<string>("ContactPhoneNumber")
                                .HasColumnType("text")
                                .HasColumnName("ContactPhoneNumber");

                            b1.HasKey("RestaurantId");

                            b1.ToTable("Restaurants");

                            b1.WithOwner()
                                .HasForeignKey("RestaurantId");
                        });

                    b.Navigation("ContactInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.RestaurantMenuItem", b =>
                {
                    b.HasOne("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.Restaurant", "Restaurant")
                        .WithMany("Menu")
                        .HasForeignKey("RestaurantId");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("RestaurantManagementSystem.src.Core.RestaurantManagement.Entities.Restaurant", b =>
                {
                    b.Navigation("Menu");
                });
#pragma warning restore 612, 618
        }
    }
}
